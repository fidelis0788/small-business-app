{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst isLoggedIn = (state = false, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return true;\n\n    case \"LOG_OUT\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst user = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nconst listings = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_LISTING\":\n      return [...state, action.value];\n\n    case \"DELETE_LISTING\":\n      const newState = [...state];\n      const filteredState = newState.filter(listing => listing.id !== action.value);\n      return filteredState;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isLoggedIn,\n  user,\n  listings\n});","map":{"version":3,"sources":["/Users/apple/Desktop/smallbusinessapp/src/Redux/Reducers.js"],"names":["combineReducers","isLoggedIn","state","action","type","user","value","listings","newState","filteredState","filter","listing","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO,IAAP;;AACF,SAAK,SAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMG,IAAI,GAAG,CAACH,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOD,MAAM,CAACG,KAAd;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMK,QAAQ,GAAG,CAACL,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACG,KAAlB,CAAP;;AACF,SAAK,gBAAL;AACE,YAAME,QAAQ,GAAG,CAAC,GAAGN,KAAJ,CAAjB;AACA,YAAMO,aAAa,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeT,MAAM,CAACG,KAAjD,CAAtB;AACA,aAAOG,aAAP;;AACF;AACE,aAAOP,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeF,eAAe,CAAC;AAAEC,EAAAA,UAAF;AAAcI,EAAAA,IAAd;AAAoBE,EAAAA;AAApB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst isLoggedIn = (state = false, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return true;\n    case \"LOG_OUT\":\n      return false;\n    default:\n      return state;\n  }\n}\n\nconst user = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nconst listings = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_LISTING\":\n      return [...state, action.value];\n    case \"DELETE_LISTING\":\n      const newState = [...state];\n      const filteredState = newState.filter(listing => listing.id !== action.value);\n      return filteredState;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({ isLoggedIn, user, listings })"]},"metadata":{},"sourceType":"module"}