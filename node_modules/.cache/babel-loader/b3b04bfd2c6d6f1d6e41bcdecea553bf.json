{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/apple/Desktop/smallbusinessapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{Container}from'@material-ui/core';import GoogleMap from'../Components/GoogleMap';var Details=function Details(props){var id=props.match.params.id;var filteredListing=props.listings.find(function(listing){return listing.id.toString()===id;});var _useState=useState(35.227200),_useState2=_slicedToArray(_useState,2),latt=_useState2[0],setLatt=_useState2[1];var _useState3=useState(-80.846100),_useState4=_slicedToArray(_useState3,2),long=_useState4[0],setLong=_useState4[1];useEffect(function(){fetch(\"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(filteredListing.address,\"&key=\").concat(process.env.REACT_APP_MAP_API_KEY)).then(function(response){return response.json();}).then(function(data){console.log(data);setLatt(data.results[0].geometry.location.lat);setLong(data.results[0].geometry.location.lng);}).catch(function(error){console.log(error);});});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"xs\",children:[/*#__PURE__*/_jsx(\"h2\",{children:filteredListing.name}),/*#__PURE__*/_jsx(\"h3\",{children:filteredListing.address}),/*#__PURE__*/_jsx(\"h3\",{children:filteredListing.hours}),/*#__PURE__*/_jsx(\"p\",{children:filteredListing.description}),/*#__PURE__*/_jsx(GoogleMap,{latt:latt,long:long,listingName:filteredListing.name})]})});};export default Details;","map":{"version":3,"sources":["/Users/apple/Desktop/smallbusinessapp/src/Components/Details.js"],"names":["useState","useEffect","Container","GoogleMap","Details","props","id","match","params","filteredListing","listings","find","listing","toString","latt","setLatt","long","setLong","fetch","address","process","env","REACT_APP_MAP_API_KEY","then","response","json","data","console","log","results","geometry","location","lat","lng","catch","error","name","hours","description"],"mappings":"oPAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,GAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B,CACA,GAAMG,CAAAA,eAAe,CAAGJ,KAAK,CAACK,QAAN,CAAeC,IAAf,CAAoB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACN,EAAR,CAAWO,QAAX,KAAyBP,EAA7B,EAA3B,CAAxB,CAFyB,cAIDN,QAAQ,CAAC,SAAD,CAJP,wCAIlBc,IAJkB,eAIZC,OAJY,8BAKDf,QAAQ,CAAC,CAAC,SAAF,CALP,yCAKlBgB,IALkB,eAKZC,OALY,eAOzBhB,SAAS,CAAC,UAAM,CACdiB,KAAK,qEAA8DT,eAAe,CAACU,OAA9E,iBAA6FC,OAAO,CAACC,GAAR,CAAYC,qBAAzG,EAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAX,OAAO,CAACW,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,QAAzB,CAAkCC,GAAnC,CAAP,CACAf,OAAO,CAACS,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,QAAzB,CAAkCE,GAAnC,CAAP,CACD,CANH,EAOGC,KAPH,CAOS,SAAAC,KAAK,CAAI,CACdR,OAAO,CAACC,GAAR,CAAYO,KAAZ,EACD,CATH,EAUD,CAXQ,CAAT,CAaA,mBACE,kCACE,MAAC,SAAD,EAAW,QAAQ,CAAC,IAApB,wBACE,oBAAK1B,eAAe,CAAC2B,IAArB,EADF,cAEE,oBAAK3B,eAAe,CAACU,OAArB,EAFF,cAGE,oBAAKV,eAAe,CAAC4B,KAArB,EAHF,cAIE,mBAAI5B,eAAe,CAAC6B,WAApB,EAJF,cAKE,KAAC,SAAD,EAAW,IAAI,CAAExB,IAAjB,CAAuB,IAAI,CAAEE,IAA7B,CAAmC,WAAW,CAAEP,eAAe,CAAC2B,IAAhE,EALF,GADF,EADF,CAWD,CA/BD,CAiCA,cAAehC,CAAAA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container } from '@material-ui/core';\nimport GoogleMap from '../Components/GoogleMap';\n\nconst Details = (props) => {\n  const id = props.match.params.id;\n  const filteredListing = props.listings.find(listing => listing.id.toString()=== id);\n\n  const [latt, setLatt] = useState(35.227200);\n  const [long, setLong] = useState(-80.846100);\n\n  useEffect(() => {\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${filteredListing.address}&key=${process.env.REACT_APP_MAP_API_KEY}`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setLatt(data.results[0].geometry.location.lat);\n        setLong(data.results[0].geometry.location.lng);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  });\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\">\n        <h2>{filteredListing.name}</h2>\n        <h3>{filteredListing.address}</h3>\n        <h3>{filteredListing.hours}</h3>\n        <p>{filteredListing.description}</p>\n        <GoogleMap latt={latt} long={long} listingName={filteredListing.name} />\n      </Container>\n    </div>\n  )\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}